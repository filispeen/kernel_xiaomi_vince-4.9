name: Test
on:
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        env:
           ACTIONS_ALLOW_UNSECURE_COMMANDS: true
           CC: clang
           CLANG_TRIPLE: aarch64-linux-gnu-
           CROSS_COMPILE: aarch64-linux-gnu-
           CROSS_COMPILE_ARM32: arm-linux-gnueabi-
           ARCH: arm64
           GITHUB_PATH: $GITHUB_PATH:/home/runner/work/kernel_xiaomi_vince-4.9/kernel_xiaomi_vince-4.9/proton-clang-20210522/bin/
        run: |
           export PATH=$PATH:/home/runner/work/kernel_xiaomi_vince-4.9/kernel_xiaomi_vince-4.9/proton-clang-20210522/bin/
           echo $PATH
           echo -e "CC: $CC\nCLANG_TRIPLE: $CLANG_TRIPLE\nCROSS_COMPILE: $CROSS_COMPILE\nCROSS_COMPILE_ARM32: $CROSS_COMPILE_ARM32\nARCH: $ARCH"
           echo -e '#!/usr/bin/env bash\nIMAGE=$(pwd)/out/arch/arm64/boot/Image.gz-dtb\necho "Clone Anykernel"\ngit clone -j$(nproc --all) https://github.com/Kry9toN/AnyKernel3 -b vince AnyKernel\necho "Done"\nexport CC=clang\nexport CLANG_TRIPLE=aarch64-linux-gnu-\nexport CROSS_COMPILE=aarch64-linux-gnu-\nexport CROSS_COMPILE_ARM32=arm-linux-gnueabi-\nexport ARCH=arm64\nexport PATH=$PATH:/home/runner/work/kernel_xiaomi_vince-4.9/kernel_xiaomi_vince-4.9/proton-clang-20210522/bin/\nexport KBUILD_BUILD_USER=root\nexport KBUILD_BUILD_HOST=FILISPEEN\nmake O=out ARCH=arm64 vince-krypton_defconfig\nmake -j$(nproc --all) O=out ARCH=arm64 CC=clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- | tee build.log\ncp out/arch/arm64/boot/Image.gz-dtb AnyKernel/zImage\nls out/arch/arm64/boot/\ncd AnyKernel\nzip -r9 KryPtoN-AOSP4.9.zip *\nls\ncd ..' >> compile
           bash compile
